/* Rexx to display CPU% across LPARs */
arg batch
signal on novalue
red = '01'x ; yellow = '02'x ; white = '03'x ; green = '04'x ; turq = '05'x
blue= '08'x; pink = '09'x
red_hi = '11'x; yellow_hi = '12'x; white_hi = '13'x; green_hi = '14'x

bar1 = '-'
bar1 = ' '
bar2 = '|'
bar3 = '|'
lb = 'AD'x
rb = 'BD'x
command = ''
c2 = ''
if batch = '' then
 do
  address ISPEXEC 'vget (zscreenw zsysid)'
  sw = zscreenw
 end
else
 sw = 80
address ISPEXEC
msg = ''
do forever
 dynvar = ''
 call mainline
 if batch <> '' then
  leave
 'display panel(pvcpupct)'
 msg = ''
 if rc <> 0 then
  leave
 command = translate(strip(zcmd))
 c1 = left(command,1)
 c2 = left(command,2)
end
exit

mainline:
rc=isfcalls('ON')
call part1
call part2
rc=isfcalls('OFF')
return

part1:
isfsysname = '*'
isfprefix = "JES2" /* Pick something that's running everywhere */
isffilter = ""
isfcols = 'JNAME SCPU SYSNAME SLCPU REAL SZIIP ZIIPUSE'
isfsort = 'SYSNAME A'
address sdsf "isfexec da" /* (alternate delayed)" */
if RC <> 0 then
 do
  call msgrtn
  return
 end
if isfrows = 0 then
 msg = 'No matching rows?   Something went wrong'
else
 do
  dynvar = dynvar || turq || copies(' ',sw - 1)
  dynvar = dynvar || turq || left('How busy is each LPAR?',sw - 1)
  dynvar = dynvar || turq || copies(' ',sw - 1)
  DO ix = 1 TO ISFROWS
   select
    when scpu.ix > 98 then
     do
      barcolour = red
      bc_highlight = red_hi
     end
    when scpu.ix > 90 then
     do
      barcolour = yellow
      bc_highlight = yellow_hi
     end
    when scpu.ix > 50 then
     do
      barcolour = white
      bc_highlight = white_hi
     end
    otherwise
     do
      barcolour = green
      bc_highlight = green_hi
     end
   end
   baradjust = 3 - (sw % 80)
   barchart = copies(bar1,scpu.ix % baradjust) || bar2
   dynvar = dynvar || barcolour || ,
            left(  sysname.ix   || ,
                   bc_highlight || ,
                   barchart     || ,
                   barcolour    || ,
                   scpu.ix      || turq,
               ,sw - 1)
  end
 end
return

part2:
isffilter = "CPUPR GT 0"
select
 when c2 = 'D1' then
  isfsysname = 'DEV1'
 when c2 = 'D2' then
  isfsysname = 'DEV2'
 when c2 = 'D3' then
  isfsysname = 'DEV3'
 when c2 = 'T1' then
  isfsysname = 'TEST'
 when c2 = 'T2' then
  isfsysname = 'TST2'
 when c2 = 'T3' then
  isfsysname = 'TST3'
 when c2 = 'P1' then
  isfsysname = 'PERF'
 when c2 = 'P2' then
  isfsysname = 'PROD'
 otherwise
  do
   isfsysname = '*'
   isffilter = "CPUPR GE 3"
  end
end
isfprefix = "**"
isfcols = 'JNAME CPUPR OWNERID JOBID SYSNAME real ziipuse'
isfsort = 'SYSNAME A CPUPR D'
address sdsf "isfexec da (alternate delayed)"
if RC <> 0 then
 do
  call msgrtn
  return
 end
if isfrows = 0 then
  msg = 'No matching rows - no single job is taking much CPU?'
else
 do
  dynvar = dynvar || turq || copies(' ',sw - 1)
  dynvar = dynvar || turq || left('Jobname   LPAR  Owner    CPU%',sw - 1)
  divider = turq || left(copies(bar1,8)'  'copies(bar1,4)'  'copies(bar1,7),
                 ' 'copies(bar1,5),sw - 1)
  prev_lpar = ''
  DO ix = 1 TO ISFROWS
   barf = cpupr.ix
   barchart = copies(bar1,barf % baradjust) || bar2 || turq
   select
    when barf > 50 then
     barcolour = red
    when barf > 25 then
     barcolour = yellow
    when barf > 10 then
     barcolour = white
    otherwise
     barcolour = green
   end
   owner = ownerid.ix
   select                            /* customise colours for jobnames */
    when jname.ix = 'SDSFAUX' then
         owner = 'SDSF   '
    when owner = userid() then
         owner = 'Me :-)'
    when pos('TCPIP',owner) <> 0 then
         owner = 'Comms  '
    when left(owner,2) = 'DB' then
         owner = 'DB2    '
    otherwise
     nop
   end                        /* customise colours for LPAR names */
   select
    when sysname.ix = 'DEV1' then
     lpar = white     || left(sysname.ix,4) || white
    when sysname.ix = 'DEV2' then
     lpar = turq      || left(sysname.ix,4) || white
    when sysname.ix = 'DEV3' then
     lpar = pink      || left(sysname.ix,4) || white
    when sysname.ix = 'PROD' then
     lpar = green     || left(sysname.ix,4) || white
    otherwise
     lpar = red       || left(sysname.ix,4) || white
   end
   if lpar <> prev_lpar then
     dynvar = dynvar || divider
   prev_lpar = lpar
   if jname.ix = 'SDSFAUX' then
    jname_colour = '02'x
   else
    if strip(owner) = '' then
     jname_colour = blue
    else
     jname_colour = yellow
   if owner = '' then
    owner = 'n/a'
   cpubar = jname_colour      || left(jname.ix,8) ,
                      lpar    || ,
                       red    || left(owner,7) ,
                       turq   || right('    'barf,5) ,
                    barcolour || barchart
   if ziipuse.ix > 0 then
    do
     zipbar = bar3 || copies(bar1,ziipuse.ix % 10)
     ziplit = 'zIIP%'
     ziplit = ''
    end
   else
    do
     zipbar = ''
     ziplit = ''
     ziipuse.ix = ''
    end
   lcpubar = length(cpubar)
   lzipbar = length(zipbar)
   #spaces = sw - lcpubar - lzipbar - length(ziplit) - 2 - length(ziipuse.ix)
   if #spaces < 1 then #spaces = 1
   dynvar = dynvar || cpubar || copies(' ',#spaces) || ziplit ziipuse.ix zipbar
  end
 end
return

msgrtn: procedure expose isfmsg isfmsg2.
if isfmsg<>"" then
   say "ISFMSG is:" isfmsg

do m=1 to isfmsg2.0
  say "ISFMSG2."m "is:" isfmsg2.m
end
return

novalue:
signal off novalue
trace n
do while queued() <> 0
 parse pull
end
say 'PVCPUPCT failed on source line' sigl
say "Uninitialised variable" condition('D')
say sourceline(sigl)
exit 20
